/*
 * This file is generated by jOOQ.
 */
package com.theoxao.dura.orm.dto.tables;


import com.theoxao.dura.orm.dto.Public;
import com.theoxao.dura.orm.dto.tables.records.IngRecord;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Ing extends TableImpl<IngRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.ing</code>
     */
    public static final Ing ING = new Ing();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<IngRecord> getRecordType() {
        return IngRecord.class;
    }

    /**
     * The column <code>public.ing.name</code>.
     */
    public final TableField<IngRecord, String> NAME = createField(DSL.name("name"), SQLDataType.VARCHAR(1024), this, "");

    /**
     * The column <code>public.ing.cnt</code>.
     */
    public final TableField<IngRecord, Long> CNT = createField(DSL.name("cnt"), SQLDataType.BIGINT, this, "");

    private Ing(Name alias, Table<IngRecord> aliased) {
        this(alias, aliased, null);
    }

    private Ing(Name alias, Table<IngRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.view("create view \"ing\" as  SELECT a.name,\n    a.cnt\n   FROM ( SELECT tb_ing_recipe_rel.name,\n            count(1) AS cnt\n           FROM tb_ing_recipe_rel\n          GROUP BY tb_ing_recipe_rel.name) a\n  WHERE (a.cnt > 2)\n  ORDER BY a.cnt DESC;"));
    }

    /**
     * Create an aliased <code>public.ing</code> table reference
     */
    public Ing(String alias) {
        this(DSL.name(alias), ING);
    }

    /**
     * Create an aliased <code>public.ing</code> table reference
     */
    public Ing(Name alias) {
        this(alias, ING);
    }

    /**
     * Create a <code>public.ing</code> table reference
     */
    public Ing() {
        this(DSL.name("ing"), null);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public Ing as(String alias) {
        return new Ing(DSL.name(alias), this);
    }

    @Override
    public Ing as(Name alias) {
        return new Ing(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Ing rename(String name) {
        return new Ing(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Ing rename(Name name) {
        return new Ing(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<String, Long> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
