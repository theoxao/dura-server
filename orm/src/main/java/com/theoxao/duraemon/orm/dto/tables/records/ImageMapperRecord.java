/*
 * This file is generated by jOOQ.
 */
package com.theoxao.duraemon.orm.dto.tables.records;


import com.theoxao.duraemon.orm.dto.tables.ImageMapper;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ImageMapperRecord extends UpdatableRecordImpl<ImageMapperRecord> implements Record6<String, Integer, String, LocalDateTime, Integer, Boolean> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.image_mapper.uuid</code>.
     */
    public void setUuid(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.image_mapper.uuid</code>.
     */
    public String getUuid() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.image_mapper.oid</code>.
     */
    public void setOid(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.image_mapper.oid</code>.
     */
    public Integer getOid() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.image_mapper.image_url</code>.
     */
    public void setImageUrl(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.image_mapper.image_url</code>.
     */
    public String getImageUrl() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.image_mapper.insert_time</code>.
     */
    public void setInsertTime(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.image_mapper.insert_time</code>.
     */
    public LocalDateTime getInsertTime() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>public.image_mapper.type</code>.
     */
    public void setType(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.image_mapper.type</code>.
     */
    public Integer getType() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>public.image_mapper.download</code>.
     */
    public void setDownload(Boolean value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.image_mapper.download</code>.
     */
    public Boolean getDownload() {
        return (Boolean) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<String, Integer, String, LocalDateTime, Integer, Boolean> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<String, Integer, String, LocalDateTime, Integer, Boolean> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return ImageMapper.IMAGE_MAPPER.UUID;
    }

    @Override
    public Field<Integer> field2() {
        return ImageMapper.IMAGE_MAPPER.OID;
    }

    @Override
    public Field<String> field3() {
        return ImageMapper.IMAGE_MAPPER.IMAGE_URL;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return ImageMapper.IMAGE_MAPPER.INSERT_TIME;
    }

    @Override
    public Field<Integer> field5() {
        return ImageMapper.IMAGE_MAPPER.TYPE;
    }

    @Override
    public Field<Boolean> field6() {
        return ImageMapper.IMAGE_MAPPER.DOWNLOAD;
    }

    @Override
    public String component1() {
        return getUuid();
    }

    @Override
    public Integer component2() {
        return getOid();
    }

    @Override
    public String component3() {
        return getImageUrl();
    }

    @Override
    public LocalDateTime component4() {
        return getInsertTime();
    }

    @Override
    public Integer component5() {
        return getType();
    }

    @Override
    public Boolean component6() {
        return getDownload();
    }

    @Override
    public String value1() {
        return getUuid();
    }

    @Override
    public Integer value2() {
        return getOid();
    }

    @Override
    public String value3() {
        return getImageUrl();
    }

    @Override
    public LocalDateTime value4() {
        return getInsertTime();
    }

    @Override
    public Integer value5() {
        return getType();
    }

    @Override
    public Boolean value6() {
        return getDownload();
    }

    @Override
    public ImageMapperRecord value1(String value) {
        setUuid(value);
        return this;
    }

    @Override
    public ImageMapperRecord value2(Integer value) {
        setOid(value);
        return this;
    }

    @Override
    public ImageMapperRecord value3(String value) {
        setImageUrl(value);
        return this;
    }

    @Override
    public ImageMapperRecord value4(LocalDateTime value) {
        setInsertTime(value);
        return this;
    }

    @Override
    public ImageMapperRecord value5(Integer value) {
        setType(value);
        return this;
    }

    @Override
    public ImageMapperRecord value6(Boolean value) {
        setDownload(value);
        return this;
    }

    @Override
    public ImageMapperRecord values(String value1, Integer value2, String value3, LocalDateTime value4, Integer value5, Boolean value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ImageMapperRecord
     */
    public ImageMapperRecord() {
        super(ImageMapper.IMAGE_MAPPER);
    }

    /**
     * Create a detached, initialised ImageMapperRecord
     */
    public ImageMapperRecord(String uuid, Integer oid, String imageUrl, LocalDateTime insertTime, Integer type, Boolean download) {
        super(ImageMapper.IMAGE_MAPPER);

        setUuid(uuid);
        setOid(oid);
        setImageUrl(imageUrl);
        setInsertTime(insertTime);
        setType(type);
        setDownload(download);
    }
}
